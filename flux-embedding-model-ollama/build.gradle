plugins {
  id 'com.gradleup.shadow' version '8.3.3'
  id 'maven-publish'
}

java {
  withJavadocJar()
  withSourcesJar()
}

dependencies {
  implementation ("dev.langchain4j:langchain4j-ollama:${langchain4jVersion}") {
    // Ensures that the version of Jackson preferred by Spark is used instead. Otherwise, this library's pom
    // will bring in a later version of Jackson that causes Spark to fail.
    exclude group: "com.fasterxml.jackson.core"
  }

  // Repeating this here so that the Jackson dependencies are included for running tests in this subproject.
  testImplementation "dev.langchain4j:langchain4j-ollama:${langchain4jVersion}"

  testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.14.0"
  testImplementation "org.junit.jupiter:junit-jupiter:5.14.0"
  testImplementation "ch.qos.logback:logback-classic:1.5.20"
}

shadowJar {
  // Don't need Jackson dependencies in the shadowJar, as Spark will provide those.
  dependencies {
    exclude {
      it.moduleGroup == 'com.fasterxml.jackson.core' || it.moduleGroup == 'com.fasterxml.jackson.databind'
    }
  }
}

publishing {
  publications {
    mainJava(MavenPublication) {
      groupId = group
      version = version
      artifactId = project.name
      from components.java
      pom {
        name = "${group}:${project.name}"
        description = "Integration for Ollama with the MarkLogic Flux API"
        packaging = "jar"
        url = "https://github.com/marklogic/flux"
        licenses {
          license {
            name = "The Apache License, Version 2.0"
            url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = "marklogic"
            name = "MarkLogic Github Contributors"
            email = "general@developer.marklogic.com"
            organization = "MarkLogic"
            organizationUrl = "https://www.marklogic.com"
          }
        }
        scm {
          url = "git@github.com:marklogic/flux.git"
          connection = "scm:git@github.com:marklogic/flux.git"
          developerConnection = "scm:git@github.com:marklogic/flux.git"
        }
      }
    }
  }
  repositories {
    maven {
      if (project.hasProperty("mavenUser")) {
        credentials {
          username = mavenUser
          password = mavenPassword
        }
        url publishUrl
        allowInsecureProtocol = true
      } else {
        name = "central"
        url = mavenCentralUrl
        credentials {
          username = mavenCentralUsername
          password = mavenCentralPassword
        }
      }
    }
  }
}

components.java.withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
  skip()
}
